name: Build

permissions:
  contents: read
  id-token: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Setup Python and Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: 3.11.6

      - name: Run tests
        run: ./do test

  build_syntactical_analysis_docker_german:
    needs: test
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Docker Build and Push
        uses: ./.github/actions/docker-build
        with:
          dockerfile: ./docker/syntactical_analysis.Dockerfile
          image-name: syntactical_analysis-lambda
          spacy_model: de_core_news_sm

  build_inflection_docker_german:
    needs: test
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Docker Build and Push
        uses: ./.github/actions/docker-build
        with:
          dockerfile: ./docker/inflection.Dockerfile
          image-name: inflection-lambda
          spacy_model: de_core_news_sm

  build_webserver_docker:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - { spacy_model: 'de_core_news_sm', language: 'de' }
          - { spacy_model: 'ru_core_news_sm', language: 'ru' }

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: tobiaswaslowski/lingolift-webserver-${{ matrix.config.language }}
          flavor: |
            latest=true
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/webserver.Dockerfile
          build-args: |
            SPACY_MODEL=${{ matrix.config.spacy_model }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  

  deploy_dev_infrastructure:
    needs: [build_inflection_docker_german, build_syntactical_analysis_docker_german]
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::246770851643:role/github-actions
          aws-region: eu-central-1

      - name: Setup Python and Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: 3.11.6

      - name: Build core dependency layer zip
        run: ./do build_core_lambda_dependencies

      - name: Build core lambda function zip
        run: ./do build_core_lambdas

      - name: deploy terraform
        env:
          TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
        run: |
          ./do deploy dev

  smoke_test:
    needs: deploy_dev_infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Setup Python and Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: 3.11.6

      - name: Smoke test
        env:
          API_GATEWAY_HOST: ${{ secrets.API_GATEWAY_HOST }}
        run: |
          ./do smoke_test

  deploy_prod:
    needs: smoke_test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::246770851643:role/github-actions
          aws-region: eu-central-1

      - name: Setup Python and Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: 3.11.6

      - name: Build core dependency layer zip
        run: ./do build_core_lambda_dependencies

      - name: Build core lambda function zip
        run: ./do build_core_lambdas

      - name: Deploy prod
        env:
          TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
        run: |
          ./do deploy prod
