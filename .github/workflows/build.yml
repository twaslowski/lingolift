name: Docker Image CI

permissions:
  contents: read
  id-token: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install pipx
          pipx ensurepath
          pipx install poetry

      - name: set up backend
        run: |
          cd backend && poetry install --with dev --with spacy
          make test
          
      - name: set up shared
        run: |
          cd shared && poetry install --with dev
          make test

      - name: Build the Docker image
        run: |
          pushd backend
          ./docker-util.sh build translation
          ./docker-util.sh build literal_translation
          ./docker-util.sh build response_suggestion

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::246770851643:role/github-actions
          aws-region: eu-central-1

      - name: Push the Docker images
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          pushd backend
          ./docker-util.sh push translation
          ./docker-util.sh push literal_translation
          ./docker-util.sh push response_suggestion

  create-infrastructure:
    needs: [build-and-push-docker]
    runs-on: ubuntu-latest
    env:
      TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::246770851643:role/github-actions
          aws-region: eu-central-1
      - name: Create Terraform Infrastructure
        run: |
          pushd backend/terraform && terraform init
          terraform apply -auto-approve
